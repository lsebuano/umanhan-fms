@* @page "/admin" *@
@using System.Net.Http.Headers
@using System.Text.Json.Serialization
@using System.Text.Json
@* @inject CustomAuthStateProvider authService *@
@attribute [Authorize]
@inject HttpClient Http
@inject IAccessTokenProvider TokenProvider
@* @inject Blazored.SessionStorage.ISessionStorageService SessionStorage *@

<PageTitle>Admin Dashboard</PageTitle>

<RadzenBreadCrumb>
    <RadzenBreadCrumbItem Path="/" Text="Home" />
    <RadzenBreadCrumbItem Path="/admin" Text="Admin Dashboard" />
</RadzenBreadCrumb>
<RadzenText TextStyle="TextStyle.H5" class="rz-my-8">Admin Dashboard</RadzenText>

@if (!isAuthorized)
{
    <p>Access Denied. You do not have permission to view this page.</p>
}
else
{
    <p>Welcome, Admin!</p>
    <button class="btn btn-dark" @onclick="FetchData">Get Secure Data</button>
    <p>@message</p>
}

@code {
    private bool isAuthorized = false;
    private string message = "";

    protected override async Task OnInitializedAsync()
    {
        // var roles = await authService.GetUserRolesAsync().ConfigureAwait(false);
        // isAuthorized = roles.Contains("Admin");
    }

    private async Task FetchData()
    {
        try
        {
//             var tokenDetails = await SessionStorage.GetItemAsync<string>("oidc.user:https://cognito-idp.us-east-1.amazonaws.com/us-east-1_GdBzlQDbq:7foetomhsle6gbsi6sl82mp1r4");
//             if (!string.IsNullOrEmpty(tokenDetails))
//             {
//                 var tokenResult = JsonSerializer.Deserialize<Models.Models.TokenResponse>(tokenDetails);
//                 var token = tokenResult?.IdToken;
//                 if (string.IsNullOrEmpty(token))
//                 {
//                     message = "Failed to get id token.";
//                     return;
//                 }
// #if DEBUG
//                 var request = new HttpRequestMessage(HttpMethod.Get, "https://z65qwx23zg.execute-api.us-east-1.amazonaws.com/v1/dev/");
// #else
//                 var request = new HttpRequestMessage(HttpMethod.Get, "https://hkuyl92x4h.execute-api.us-east-1.amazonaws.com/admindashboard");
// #endif
//                 request.Headers.Authorization = new AuthenticationHeaderValue("Bearer", token);

//                 var response = await Http.SendAsync(request).ConfigureAwait(false);
//                 var r = response.EnsureSuccessStatusCode();
//                 if (r.IsSuccessStatusCode)
//                 {
//                     message = await response.Content.ReadAsStringAsync().ConfigureAwait(false);
//                 }
//                 else
//                 {
//                     message = $"Error: {response.StatusCode}";
//                 }
//             }
//             else
//             {
//                 message = "Failed to get access token.";
//             }
        }
        catch (Exception ex)
        {
            message = $"Error: {ex.Message}";
        }
    }
}